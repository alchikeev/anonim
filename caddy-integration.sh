#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ "–ê–Ω–æ–Ω–∏–º –ú–µ–∫—Ç–µ–ø" —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º Caddy

set -e

echo "üîß –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Caddy –¥–ª—è '–ê–Ω–æ–Ω–∏–º –ú–µ–∫—Ç–µ–ø'"
echo "=========================================="

# –ü—É—Ç–∏
CADDYFILE_PATH="/etc/caddy/Caddyfile"
BACKUP_PATH="/etc/caddy/Caddyfile.backup.$(date +%Y%m%d_%H%M%S)"
ANONIM_CONFIG="Caddyfile"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
check_permissions() {
    if [[ $EUID -ne 0 ]]; then
        echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo $0"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
backup_caddyfile() {
    if [ -f "$CADDYFILE_PATH" ]; then
        echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ Caddyfile..."
        cp "$CADDYFILE_PATH" "$BACKUP_PATH"
        echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_PATH"
    else
        echo "‚ö†Ô∏è  Caddyfile –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $CADDYFILE_PATH"
        echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª Caddyfile –≤—Ä—É—á–Ω—É—é"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
add_anonim_config() {
    echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è anonim-m.online..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è anonim-m.online
    if grep -q "anonim-m.online" "$CADDYFILE_PATH"; then
        echo "‚ö†Ô∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è anonim-m.online —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª: $CADDYFILE_PATH"
        return 1
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    echo "" >> "$CADDYFILE_PATH"
    echo "# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ê–Ω–æ–Ω–∏–º –ú–µ–∫—Ç–µ–ø" >> "$CADDYFILE_PATH"
    cat "$ANONIM_CONFIG" >> "$CADDYFILE_PATH"
    
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Caddyfile"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    
    mkdir -p /var/www/anonim/static
    mkdir -p /var/www/anonim/media
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    chown -R www-data:www-data /var/www/anonim/
    chmod -R 755 /var/www/anonim/
    
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Docker —Å–µ—Ç–∏
setup_docker_network() {
    echo "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker —Å–µ—Ç–∏..."
    
    # –°–æ–∑–¥–∞–µ–º –≤–Ω–µ—à–Ω—é—é —Å–µ—Ç—å –¥–ª—è Caddy
    docker network create caddy_network 2>/dev/null || echo "–°–µ—Ç—å caddy_network —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Ç—å anonim_network –∫ caddy_network
    echo "‚úÖ Docker —Å–µ—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è docker-compose
update_docker_compose() {
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Caddy..."
    
    # –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Å–∏—é –¥–ª—è Caddy
    cat > docker-compose.caddy.yml << 'EOF'
version: '3.8'

services:
  web:
    build: .
    expose:
      - "8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DJANGO_ENV=prod
      - DJANGO_DEBUG=False
      - DJANGO_ALLOWED_HOSTS=anonim-m.online,www.anonim-m.online
      - DJANGO_SITE_DOMAIN=anonim-m.online
      - DJANGO_DB_ENGINE=django.db.backends.sqlite3
      - DJANGO_DB_NAME=db.sqlite3
    env_file:
      - .env.prod
    command: >
      sh -c "python manage.py migrate &&
             python manage.py init_data &&
             python manage.py init_new_pages &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 anonim_mektep.wsgi:application"
    restart: unless-stopped
    networks:
      - anonim_network
      - caddy_network

volumes:
  static_volume:
  media_volume:

networks:
  anonim_network:
    driver: bridge
  caddy_network:
    external: true
EOF

    echo "‚úÖ docker-compose.caddy.yml —Å–æ–∑–¥–∞–Ω"
}

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
test_caddy_config() {
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Caddy..."
    
    if command -v caddy &> /dev/null; then
        caddy validate --config "$CADDYFILE_PATH"
        echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Caddy –≤–∞–ª–∏–¥–Ω–∞"
    else
        echo "‚ö†Ô∏è  Caddy –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Caddy
restart_caddy() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Caddy..."
    
    if systemctl is-active --quiet caddy; then
        systemctl reload caddy
        echo "‚úÖ Caddy –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
    else
        echo "‚ö†Ô∏è  Caddy –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
show_instructions() {
    echo ""
    echo "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo "======================================"
    echo ""
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    echo "   docker-compose -f docker-compose.caddy.yml up -d"
    echo ""
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
    echo "   docker-compose -f docker-compose.caddy.yml ps"
    echo ""
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "   docker-compose -f docker-compose.caddy.yml logs -f"
    echo ""
    echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Caddy:"
    echo "   systemctl status caddy"
    echo "   caddy reload"
    echo ""
    echo "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç:"
    echo "   curl -I https://anonim-m.online"
    echo ""
    echo "6. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
    echo "   docker stats"
    echo "   journalctl -u caddy -f"
    echo ""
    echo "‚ö†Ô∏è  –í–∞–∂–Ω–æ:"
    echo "- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω anonim-m.online —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä"
    echo "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    echo "- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env.prod —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "${1:-install}" in
        "install")
            check_permissions
            backup_caddyfile
            add_anonim_config
            create_directories
            setup_docker_network
            update_docker_compose
            test_caddy_config
            restart_caddy
            show_instructions
            ;;
        "uninstall")
            check_permissions
            echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —É–¥–∞–ª–µ–Ω–∏—è
            echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞"
            ;;
        "test")
            test_caddy_config
            ;;
        "restart")
            restart_caddy
            ;;
        "help"|*)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
            echo ""
            echo "–ö–æ–º–∞–Ω–¥—ã:"
            echo "  install   - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Caddy (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
            echo "  uninstall - –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"
            echo "  test      - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
            echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Caddy"
            echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            ;;
    esac
}

main "$@"
