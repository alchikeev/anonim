from django.conf import settings
from core.models import User, School
from .telegram_bot import TelegramBot

TELEGRAM_BOT_TOKEN = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)

def send_telegram_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π Telegram –±–æ—Ç"""
    if not TELEGRAM_BOT_TOKEN:
        return False
    try:
        bot = TelegramBot()
        return bot.send_message(chat_id, text, reply_markup)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def notify_admins_about_message(message_obj):
    school = message_obj.school
    site_domain = getattr(settings, 'SITE_DOMAIN', '127.0.0.1:8000')
    protocol = 'https' if not settings.DEBUG else 'http'
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    problem_type_display = dict(message_obj.PROBLEM_TYPE_CHOICES).get(message_obj.problem_type, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    if school:
        recipient = f"üè´ <b>–®–∫–æ–ª–∞:</b> {school.name}"
    else:
        recipient = "üè¢ <b>–†–∞–π–æ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è</b>"
    
    message_text = f"""
üö® <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ #{message_obj.id}</b>

{recipient}
üìã <b>–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã:</b> {problem_type_display}
üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {message_obj.problem[:200]}{'...' if len(message_obj.problem) > 200 else ''}
‚è∞ <b>–í—Ä–µ–º—è:</b> {message_obj.created_at.strftime('%d.%m.%Y %H:%M')}
"""
    
    # –°–æ–∑–¥–∞–µ–º inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    inline_keyboard = {
        'inline_keyboard': [
            [
                {'text': '‚è≥ –í —Ä–∞–±–æ—Ç—É', 'callback_data': f'set_status_{message_obj.id}_in_progress'},
                {'text': '‚úÖ –†–µ—à–µ–Ω–æ', 'callback_data': f'set_status_{message_obj.id}_resolved'}
            ],
            [{'text': 'üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', 'callback_data': f'comment_{message_obj.id}'}],
            [{'text': 'üìã –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ', 'url': f"{protocol}://{site_domain}/staff/messages/{message_obj.id}/"}]
        ]
    }
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—á–∏—Ç–µ–ª—è–º –ø–æ —à–∫–æ–ª–µ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —à–∫–æ–ª—ã)
    if school:
        teachers = User.objects.filter(role=User.TEACHER, school=school, is_active=True)
        for teacher in teachers:
            if hasattr(teacher, 'telegram_chat_id') and teacher.telegram_chat_id:
                send_telegram_message(
                    teacher.telegram_chat_id, 
                    message_text,
                    reply_markup=inline_keyboard
                )
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–Ω–æ–º—É –æ—Ç–¥–µ–ª—É –ø–æ –≤—Å–µ–º —à–∫–æ–ª–∞–º
    rayon_admins = User.objects.filter(role=User.RAYON_OTDEL, is_active=True)
    for admin in rayon_admins:
        if hasattr(admin, 'telegram_chat_id') and admin.telegram_chat_id:
            send_telegram_message(
                admin.telegram_chat_id, 
                message_text,
                reply_markup=inline_keyboard
            )
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–≤
    super_admins = User.objects.filter(role=User.SUPER_ADMIN, is_active=True)
    for admin in super_admins:
        if hasattr(admin, 'telegram_chat_id') and admin.telegram_chat_id:
            send_telegram_message(
                admin.telegram_chat_id, 
                message_text,
                reply_markup=inline_keyboard
            )
