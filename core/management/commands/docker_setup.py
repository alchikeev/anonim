from django.core.management.base import BaseCommand
import os
import subprocess


class Command(BaseCommand):
    help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è Docker'

    def add_arguments(self, parser):
        parser.add_argument(
            '--env',
            choices=['dev', 'prod'],
            default='prod',
            help='–°—Ä–µ–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (dev –∏–ª–∏ prod)'
        )

    def handle(self, *args, **options):
        env = options['env']
        
        self.stdout.write(
            self.style.SUCCESS('üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –¥–ª—è "–ê–Ω–æ–Ω–∏–º –ú–µ–∫—Ç–µ–ø"')
        )
        self.stdout.write('=' * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
        if not self.check_docker():
            self.stdout.write(
                self.style.ERROR('‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–æ–≤
        self.check_env_files(env)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        self.show_instructions(env)

    def check_docker(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Docker"""
        try:
            subprocess.run(['docker', '--version'], 
                         capture_output=True, check=True)
            self.stdout.write('‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
            return True
        except (subprocess.CalledProcessError, FileNotFoundError):
            return False

    def check_env_files(self, env):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–æ–≤"""
        env_file = f'.env.{env}'
        
        if os.path.exists(env_file):
            self.stdout.write(f'‚úÖ –§–∞–π–ª {env_file} –Ω–∞–π–¥–µ–Ω')
        else:
            self.stdout.write(
                self.style.WARNING(f'‚ö†Ô∏è  –§–∞–π–ª {env_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!')
            )
            self.stdout.write(f'–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª {env_file} –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example')

    def show_instructions(self, env):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É"""
        self.stdout.write(f'\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è {env.upper()} —Å—Ä–µ–¥—ã:')
        
        if env == 'dev':
            self.stdout.write('\nüõ†Ô∏è –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:')
            self.stdout.write('1. –°–æ–∑–¥–∞–π—Ç–µ .env.dev —Ñ–∞–π–ª:')
            self.stdout.write('   cp env.example .env.dev')
            self.stdout.write('2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env.dev —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏')
            self.stdout.write('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:')
            self.stdout.write('   ./docker-build.sh dev')
            self.stdout.write('4. –°–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://127.0.0.1:8000')
            
        else:
            self.stdout.write('\nüöÄ –ü—Ä–æ–¥–∞–∫—à–µ–Ω:')
            self.stdout.write('1. –°–æ–∑–¥–∞–π—Ç–µ .env.prod —Ñ–∞–π–ª:')
            self.stdout.write('   cp env.example .env.prod')
            self.stdout.write('2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env.prod —Å –ø—Ä–æ–¥–∞–∫—à–µ–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏')
            self.stdout.write('3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ssl/')
            self.stdout.write('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:')
            self.stdout.write('   ./docker-build.sh prod')
            self.stdout.write('5. –°–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://anonim-m.online')
        
        self.stdout.write('\nüîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')
        self.stdout.write('  ./docker-build.sh logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏')
        self.stdout.write('  ./docker-build.sh status   - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤')
        self.stdout.write('  ./docker-build.sh shell    - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä')
        self.stdout.write('  ./docker-build.sh stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã')
        self.stdout.write('  ./docker-build.sh clean    - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ')
        
        self.stdout.write('\nüìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:')
        self.stdout.write('  docker-compose ps          - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤')
        self.stdout.write('  docker-compose logs -f     - –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏')
        self.stdout.write('  docker stats               - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤')
        
        self.stdout.write('\n‚ö†Ô∏è  –í–∞–∂–Ω–æ:')
        self.stdout.write('- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç—ã 80 –∏ 443 —Å–≤–æ–±–æ–¥–Ω—ã')
        self.stdout.write('- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞')
        self.stdout.write('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ reCAPTCHA –∏ Telegram –±–æ—Ç–∞')
