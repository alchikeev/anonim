from django.core.management.base import BaseCommand
from django.conf import settings
import os


class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞'

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ "–ê–Ω–æ–Ω–∏–º –ú–µ–∫—Ç–µ–ø"')
        )
        self.stdout.write('=' * 50)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.check_django_settings()
        self.check_telegram_settings()
        self.check_recaptcha_settings()
        self.check_database_settings()
        
        self.stdout.write('=' * 50)
        self.stdout.write(
            self.style.SUCCESS('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        )

    def check_django_settings(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django"""
        self.stdout.write('\nüìã Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')
        
        # SECRET_KEY
        if settings.SECRET_KEY and settings.SECRET_KEY != 'django-insecure-gta5n-@b68%0u&3^6w!az)v+2t#%x3o)g=e!@_o$hl)ph928ec':
            self.stdout.write('  ‚úÖ SECRET_KEY: –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        else:
            self.stdout.write(
                self.style.WARNING('  ‚ö†Ô∏è  SECRET_KEY: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
            )
        
        # DEBUG
        if settings.DEBUG:
            self.stdout.write('  ‚ö†Ô∏è  DEBUG: –≤–∫–ª—é—á–µ–Ω (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)')
        else:
            self.stdout.write('  ‚úÖ DEBUG: –æ—Ç–∫–ª—é—á–µ–Ω (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)')
        
        # ALLOWED_HOSTS
        if settings.ALLOWED_HOSTS:
            self.stdout.write(f'  ‚úÖ ALLOWED_HOSTS: {", ".join(settings.ALLOWED_HOSTS)}')
        else:
            self.stdout.write(
                self.style.ERROR('  ‚ùå ALLOWED_HOSTS: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            )

    def check_telegram_settings(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞"""
        self.stdout.write('\nü§ñ Telegram Bot –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')
        
        # TELEGRAM_BOT_TOKEN
        if hasattr(settings, 'TELEGRAM_BOT_TOKEN') and settings.TELEGRAM_BOT_TOKEN:
            self.stdout.write('  ‚úÖ TELEGRAM_BOT_TOKEN: –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        else:
            self.stdout.write(
                self.style.ERROR('  ‚ùå TELEGRAM_BOT_TOKEN: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            )
        
        # TELEGRAM_BOT_USERNAME
        if hasattr(settings, 'TELEGRAM_BOT_USERNAME') and settings.TELEGRAM_BOT_USERNAME:
            self.stdout.write(f'  ‚úÖ TELEGRAM_BOT_USERNAME: {settings.TELEGRAM_BOT_USERNAME}')
        else:
            self.stdout.write(
                self.style.WARNING('  ‚ö†Ô∏è  TELEGRAM_BOT_USERNAME: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            )
        
        # TELEGRAM_WEBHOOK_URL
        if hasattr(settings, 'TELEGRAM_WEBHOOK_URL') and settings.TELEGRAM_WEBHOOK_URL:
            self.stdout.write(f'  ‚úÖ TELEGRAM_WEBHOOK_URL: {settings.TELEGRAM_WEBHOOK_URL}')
        else:
            self.stdout.write(
                self.style.WARNING('  ‚ö†Ô∏è  TELEGRAM_WEBHOOK_URL: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            )

    def check_recaptcha_settings(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ reCAPTCHA"""
        self.stdout.write('\nüîí reCAPTCHA –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')
        
        # RECAPTCHA_PUBLIC_KEY
        if hasattr(settings, 'RECAPTCHA_PUBLIC_KEY') and settings.RECAPTCHA_PUBLIC_KEY:
            self.stdout.write('  ‚úÖ RECAPTCHA_PUBLIC_KEY: –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        else:
            self.stdout.write(
                self.style.WARNING('  ‚ö†Ô∏è  RECAPTCHA_PUBLIC_KEY: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            )
        
        # RECAPTCHA_PRIVATE_KEY
        if hasattr(settings, 'RECAPTCHA_PRIVATE_KEY') and settings.RECAPTCHA_PRIVATE_KEY:
            self.stdout.write('  ‚úÖ RECAPTCHA_PRIVATE_KEY: –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        else:
            self.stdout.write(
                self.style.WARNING('  ‚ö†Ô∏è  RECAPTCHA_PRIVATE_KEY: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            )

    def check_database_settings(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        self.stdout.write('\nüóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:')
        
        db_engine = settings.DATABASES['default']['ENGINE']
        if 'sqlite' in db_engine:
            if settings.DEBUG:
                self.stdout.write('  ‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)')
            else:
                self.stdout.write('  ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)')
        elif 'postgresql' in db_engine:
            self.stdout.write('  ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)')
        else:
            self.stdout.write(f'  ‚ÑπÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_engine}')
        
        # SITE_DOMAIN
        if hasattr(settings, 'SITE_DOMAIN') and settings.SITE_DOMAIN:
            self.stdout.write(f'  ‚úÖ SITE_DOMAIN: {settings.SITE_DOMAIN}')
        else:
            self.stdout.write(
                self.style.WARNING('  ‚ö†Ô∏è  SITE_DOMAIN: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
            )
